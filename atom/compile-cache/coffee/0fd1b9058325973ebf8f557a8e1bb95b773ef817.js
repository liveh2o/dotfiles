(function() {
  describe('Linter Behavior', function() {
    var bottomContainer, getLinter, getMessage, linter, linterState, trigger, _ref;
    linter = null;
    linterState = null;
    bottomContainer = null;
    _ref = require('./common'), getLinter = _ref.getLinter, trigger = _ref.trigger;
    getMessage = function(type, filePath) {
      return {
        type: type,
        text: 'Some Message',
        filePath: filePath,
        range: [[0, 0], [1, 1]]
      };
    };
    beforeEach(function() {
      return waitsForPromise(function() {
        return atom.packages.activatePackage('linter').then(function() {
          linter = atom.packages.getActivePackage('linter').mainModule.instance;
          linterState = linter.state;
          return bottomContainer = linter.views.bottomContainer;
        });
      });
    });
    describe('Bottom Tabs', function() {
      it('defaults to file tab', function() {
        return expect(linterState.scope).toBe('File');
      });
      it('changes tab on click', function() {
        trigger(bottomContainer.getTab('Project'), 'click');
        return expect(linterState.scope).toBe('Project');
      });
      it('toggles panel visibility on click', function() {
        var timesCalled;
        timesCalled = 0;
        bottomContainer.onShouldTogglePanel(function() {
          return ++timesCalled;
        });
        trigger(bottomContainer.getTab('Project'), 'click');
        expect(timesCalled).toBe(0);
        trigger(bottomContainer.getTab('Project'), 'click');
        return expect(timesCalled).toBe(1);
      });
      it('re-enables panel when another tab is clicked', function() {
        var timesCalled;
        timesCalled = 0;
        bottomContainer.onShouldTogglePanel(function() {
          return ++timesCalled;
        });
        trigger(bottomContainer.getTab('File'), 'click');
        expect(timesCalled).toBe(1);
        trigger(bottomContainer.getTab('Project'), 'click');
        return expect(timesCalled).toBe(1);
      });
      return it('updates count on pane change', function() {
        var messages, provider;
        provider = getLinter();
        expect(bottomContainer.getTab('File').count).toBe(0);
        messages = [getMessage('Error', __dirname + '/fixtures/file.txt')];
        linter.setMessages(provider, messages);
        linter.messages.updatePublic();
        return waitsForPromise(function() {
          return atom.workspace.open('file.txt').then(function() {
            expect(bottomContainer.getTab('File').count).toBe(1);
            expect(linter.views.bottomPanel.getVisibility()).toBe(true);
            return atom.workspace.open('/tmp/non-existing-file');
          }).then(function() {
            expect(bottomContainer.getTab('File').count).toBe(0);
            return expect(linter.views.bottomPanel.getVisibility()).toBe(false);
          });
        });
      });
    });
    return describe('Markers', function() {
      return it('automatically marks files when they are opened if they have any markers', function() {
        var messages, provider;
        provider = getLinter();
        messages = [getMessage('Error', '/etc/passwd')];
        linter.setMessages(provider, messages);
        linter.messages.updatePublic();
        return waitsForPromise(function() {
          return atom.workspace.open('/etc/passwd').then(function() {
            var activeEditor;
            activeEditor = atom.workspace.getActiveTextEditor();
            return expect(activeEditor.getMarkers().length > 0).toBe(true);
          });
        });
      });
    });
  });

}).call(this);

//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICIiLAogICJzb3VyY2VSb290IjogIiIsCiAgInNvdXJjZXMiOiBbCiAgICAiL1VzZXJzL2FoLy5hdG9tL3BhY2thZ2VzL2xpbnRlci9zcGVjL2xpbnRlci1iZWhhdmlvci1zcGVjLmNvZmZlZSIKICBdLAogICJuYW1lcyI6IFtdLAogICJtYXBwaW5ncyI6ICJBQUFBO0FBQUEsRUFBQSxRQUFBLENBQVMsaUJBQVQsRUFBNEIsU0FBQSxHQUFBO0FBQzFCLFFBQUEsMEVBQUE7QUFBQSxJQUFBLE1BQUEsR0FBUyxJQUFULENBQUE7QUFBQSxJQUNBLFdBQUEsR0FBYyxJQURkLENBQUE7QUFBQSxJQUVBLGVBQUEsR0FBa0IsSUFGbEIsQ0FBQTtBQUFBLElBR0EsT0FBdUIsT0FBQSxDQUFRLFVBQVIsQ0FBdkIsRUFBQyxpQkFBQSxTQUFELEVBQVksZUFBQSxPQUhaLENBQUE7QUFBQSxJQUtBLFVBQUEsR0FBYSxTQUFDLElBQUQsRUFBTyxRQUFQLEdBQUE7QUFDWCxhQUFPO0FBQUEsUUFBQyxNQUFBLElBQUQ7QUFBQSxRQUFPLElBQUEsRUFBTSxjQUFiO0FBQUEsUUFBNkIsVUFBQSxRQUE3QjtBQUFBLFFBQXVDLEtBQUEsRUFBTyxDQUFDLENBQUMsQ0FBRCxFQUFJLENBQUosQ0FBRCxFQUFTLENBQUMsQ0FBRCxFQUFJLENBQUosQ0FBVCxDQUE5QztPQUFQLENBRFc7SUFBQSxDQUxiLENBQUE7QUFBQSxJQVFBLFVBQUEsQ0FBVyxTQUFBLEdBQUE7YUFDVCxlQUFBLENBQWdCLFNBQUEsR0FBQTtlQUNkLElBQUksQ0FBQyxRQUFRLENBQUMsZUFBZCxDQUE4QixRQUE5QixDQUF1QyxDQUFDLElBQXhDLENBQTZDLFNBQUEsR0FBQTtBQUMzQyxVQUFBLE1BQUEsR0FBUyxJQUFJLENBQUMsUUFBUSxDQUFDLGdCQUFkLENBQStCLFFBQS9CLENBQXdDLENBQUMsVUFBVSxDQUFDLFFBQTdELENBQUE7QUFBQSxVQUNBLFdBQUEsR0FBYyxNQUFNLENBQUMsS0FEckIsQ0FBQTtp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

//# sourceURL=/Users/ah/.atom/packages/linter/spec/linter-behavior-spec.coffee
