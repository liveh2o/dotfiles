Object.defineProperty(exports, '__esModule', {
  value: true
});
exports.activate = activate;
exports.deactivate = deactivate;

var _atom = require('atom');

'use babel';
var config = {
  fixTreeView: {
    description: 'Make single clicks in the tree view open a file.',
    type: 'boolean',
    'default': true
  },
  fixSearchResultsView: {
    description: 'Make single click in the project search results view open a file.',
    type: 'boolean',
    'default': true
  },
  focusEditorOnOpen: {
    description: 'Focus the editor immediately when a file is opened.',
    type: 'boolean',
    'default': true
  }
};

exports.config = config;
var disposables;

function activate() {
  disposables = new _atom.CompositeDisposable();

  if (atom.config.get('single-click-open.fixTreeView')) disablePendingItems();

  if (atom.config.get('single-click-open.fixSearchResultsView')) disableSearchResultDoubleClick();
}

function deactivate() {
  disposables.dispose();
  disposables = null;
}

// No more pending pane items!
function disablePendingItems() {
  // Fix doesn't work without this setting enabled.
  atom.config.set('core.allowPendingPaneItems', true);
  disposables.add(atom.workspace.onDidAddPaneItem(function (_ref) {
    var item = _ref.item;
    var pane = _ref.pane;

    pane.setPendingItem(null);

    if (atom.config.get('single-click-open.focusEditorOnOpen')) {
      process.nextTick(function () {
        return atom.views.getView(item).focus();
      });
    }
  }));

  if (atom.config.get('single-click-open.focusEditorOnOpen')) {
    disposables.add(atom.workspace.onDidChangeActivePaneItem(function (item) {
      var view = atom.views.getView(item);

      if (view && typeof view.focus == 'function') atom.views.getView(item).focus();
    }));
  }
}

// No more double click to open files!
function disableSearchResultDoubleClick() {
  document.body.addEventListener('mousedown', onSearchResultClick, true);
  return new _atom.Disposable(function () {
    document.body.removeEventListener('mousedown', onSearchResultClick);
  });
}

// Trigger a 2nd mousedown on the search result
// on a single mousedown.
function onSearchResultClick(event) {
  var el;
  // Ignore double-clicks or other mouse buttons.
  // Do nothing if it isn't a file that was clicked.
  if (event.detail == 2 || event.button != 0 || !(el = event.target.closest('.pane-item > .results-view .search-result'))) return;
  // Without nextTick() two copies would open,
  // one in pending mode and one in normal mode.
  process.nextTick(function () {
    // Dispatch a double-click event on the file
    // that was clicked.
    el.dispatchEvent(new CustomEvent('mousedown', {
      bubbles: true,
      detail: 2
    }));
  });
  // Cancel this event.
  event.stopImmediatePropagation();
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9haC8uYXRvbS9wYWNrYWdlcy9zaW5nbGUtY2xpY2stb3Blbi9saWIvc2luZ2xlLWNsaWNrLW9wZW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O29CQUM4QyxNQUFNOztBQURwRCxXQUFXLENBQUM7QUFHTCxJQUFJLE1BQU0sR0FBRztBQUNsQixhQUFXLEVBQUU7QUFDWCxlQUFXLEVBQUUsa0RBQWtEO0FBQy9ELFFBQUksRUFBRSxTQUFTO0FBQ2YsZUFBUyxJQUFJO0dBQ2Q7QUFDRCxzQkFBb0IsRUFBRTtBQUNwQixlQUFXLEVBQUUsbUVBQW1FO0FBQ2hGLFFBQUksRUFBRSxTQUFTO0FBQ2YsZUFBUyxJQUFJO0dBQ2Q7QUFDRCxtQkFBaUIsRUFBRTtBQUNqQixlQUFXLEVBQUUscURBQXFEO0FBQ2xFLFFBQUksRUFBRSxTQUFTO0FBQ2YsZUFBUyxJQUFJO0dBQ2Q7Q0FDRixDQUFDOzs7QUFFRixJQUFJLFdBQVcsQ0FBQzs7QUFFVCxTQUFTLFFBQVEsR0FBRztBQUN6QixhQUFXLEdBQUcsK0JBQXlCLENBQUM7O0FBRXhDLE1BQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsK0JBQStCLENBQUMsRUFDbEQsbUJBQW1CLEVBQUUsQ0FBQzs7QUFFeEIsTUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyx3Q0FBd0MsQ0FBQyxFQUMzRCw4QkFBOEIsRUFBRSxDQUFDO0NBQ3BDOztBQUVNLFNBQVMsVUFBVSxHQUFHO0FBQzNCLGFBQVcsQ0FBQyxPQUFPLEVBQUUsQ0FBQztBQUN0QixhQUFXLEdBQUcsSUFBSSxDQUFDO0NBQ3BCOzs7QUFHRCxTQUFTLG1CQUFtQixHQUFHOztBQUU3QixNQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyw0QkFBNEIsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNwRCxhQUFXLENBQUMsR0FBRyxDQUNiLElBQUksQ0FBQyxTQUFTLENBQUMsZ0JBQWdCLENBQUMsVUFBQyxJQUFZLEVBQUs7UUFBaEIsSUFBSSxHQUFMLElBQVksQ0FBWCxJQUFJO1FBQUUsSUFBSSxHQUFYLElBQVksQ0FBTCxJQUFJOztBQUMxQyxRQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxDQUFDOztBQUUxQixRQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLHFDQUFxQyxDQUFDLEVBQUU7QUFDMUQsYUFBTyxDQUFDLFFBQVEsQ0FBQztlQUFNLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLEtBQUssRUFBRTtPQUFBLENBQUMsQ0FBQztLQUMxRDtHQUNGLENBQUMsQ0FDSCxDQUFDOztBQUVGLE1BQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMscUNBQXFDLENBQUMsRUFBRTtBQUMxRCxlQUFXLENBQUMsR0FBRyxDQUNiLElBQUksQ0FBQyxTQUFTLENBQUMseUJBQXlCLENBQUMsVUFBQSxJQUFJLEVBQUk7QUFDL0MsVUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7O0FBRXBDLFVBQUksSUFBSSxJQUFJLE9BQU8sSUFBSSxDQUFDLEtBQUssSUFBSSxVQUFVLEVBQ3pDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDO0tBQ3BDLENBQUMsQ0FDSCxDQUFDO0dBQ0g7Q0FDRjs7O0FBR0QsU0FBUyw4QkFBOEIsR0FBRztBQUN4QyxVQUFRLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFdBQVcsRUFBRSxtQkFBbUIsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUN2RSxTQUFPLHFCQUFlLFlBQU07QUFDMUIsWUFBUSxDQUFDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxXQUFXLEVBQUUsbUJBQW1CLENBQUMsQ0FBQTtHQUNwRSxDQUFDLENBQUM7Q0FDSjs7OztBQUlELFNBQVMsbUJBQW1CLENBQUMsS0FBSyxFQUFFO0FBQ2xDLE1BQUksRUFBRSxDQUFDOzs7QUFHUCxNQUFJLEtBQUssQ0FBQyxNQUFNLElBQUksQ0FBQyxJQUFJLEtBQUssQ0FBQyxNQUFNLElBQUksQ0FBQyxJQUN4QyxFQUFFLEVBQUUsR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQywyQ0FBMkMsQ0FBQyxDQUFBLEFBQUMsRUFBRSxPQUFPOzs7QUFHcEYsU0FBTyxDQUFDLFFBQVEsQ0FBQyxZQUFNOzs7QUFHckIsTUFBRSxDQUFDLGFBQWEsQ0FBQyxJQUFJLFdBQVcsQ0FBQyxXQUFXLEVBQUU7QUFDNUMsYUFBTyxFQUFFLElBQUk7QUFDYixZQUFNLEVBQUUsQ0FBQztLQUNWLENBQUMsQ0FBQyxDQUFDO0dBQ0wsQ0FBQyxDQUFDOztBQUVILE9BQUssQ0FBQyx3QkFBd0IsRUFBRSxDQUFDO0NBQ2xDIiwiZmlsZSI6Ii9Vc2Vycy9haC8uYXRvbS9wYWNrYWdlcy9zaW5nbGUtY2xpY2stb3Blbi9saWIvc2luZ2xlLWNsaWNrLW9wZW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGJhYmVsJztcbmltcG9ydCB7RGlzcG9zYWJsZSwgQ29tcG9zaXRlRGlzcG9zYWJsZX0gZnJvbSAnYXRvbSc7XG5cbmV4cG9ydCB2YXIgY29uZmlnID0ge1xuICBmaXhUcmVlVmlldzoge1xuICAgIGRlc2NyaXB0aW9uOiAnTWFrZSBzaW5nbGUgY2xpY2tzIGluIHRoZSB0cmVlIHZpZXcgb3BlbiBhIGZpbGUuJyxcbiAgICB0eXBlOiAnYm9vbGVhbicsXG4gICAgZGVmYXVsdDogdHJ1ZSxcbiAgfSxcbiAgZml4U2VhcmNoUmVzdWx0c1ZpZXc6IHtcbiAgICBkZXNjcmlwdGlvbjogJ01ha2Ugc2luZ2xlIGNsaWNrIGluIHRoZSBwcm9qZWN0IHNlYXJjaCByZXN1bHRzIHZpZXcgb3BlbiBhIGZpbGUuJyxcbiAgICB0eXBlOiAnYm9vbGVhbicsXG4gICAgZGVmYXVsdDogdHJ1ZSxcbiAgfSxcbiAgZm9jdXNFZGl0b3JPbk9wZW46IHtcbiAgICBkZXNjcmlwdGlvbjogJ0ZvY3VzIHRoZSBlZGl0b3IgaW1tZWRpYXRlbHkgd2hlbiBhIGZpbGUgaXMgb3BlbmVkLicsXG4gICAgdHlwZTogJ2Jvb2xlYW4nLFxuICAgIGRlZmF1bHQ6IHRydWUsXG4gIH1cbn07XG5cbnZhciBkaXNwb3NhYmxlcztcblxuZXhwb3J0IGZ1bmN0aW9uIGFjdGl2YXRlKCkge1xuICBkaXNwb3NhYmxlcyA9IG5ldyBDb21wb3NpdGVEaXNwb3NhYmxlKCk7XG5cbiAgaWYgKGF0b20uY29uZmlnLmdldCgnc2luZ2xlLWNsaWNrLW9wZW4uZml4VHJlZVZpZXcnKSlcbiAgICBkaXNhYmxlUGVuZGluZ0l0ZW1zKCk7XG5cbiAgaWYgKGF0b20uY29uZmlnLmdldCgnc2luZ2xlLWNsaWNrLW9wZW4uZml4U2VhcmNoUmVzdWx0c1ZpZXcnKSlcbiAgICBkaXNhYmxlU2VhcmNoUmVzdWx0RG91YmxlQ2xpY2soKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRlYWN0aXZhdGUoKSB7XG4gIGRpc3Bvc2FibGVzLmRpc3Bvc2UoKTtcbiAgZGlzcG9zYWJsZXMgPSBudWxsO1xufVxuXG4vLyBObyBtb3JlIHBlbmRpbmcgcGFuZSBpdGVtcyFcbmZ1bmN0aW9uIGRpc2FibGVQZW5kaW5nSXRlbXMoKSB7XG4gIC8vIEZpeCBkb2Vzbid0IHdvcmsgd2l0aG91dCB0aGlzIHNldHRpbmcgZW5hYmxlZC5cbiAgYXRvbS5jb25maWcuc2V0KCdjb3JlLmFsbG93UGVuZGluZ1BhbmVJdGVtcycsIHRydWUpO1xuICBkaXNwb3NhYmxlcy5hZGQoXG4gICAgYXRvbS53b3Jrc3BhY2Uub25EaWRBZGRQYW5lSXRlbSgoe2l0ZW0sIHBhbmV9KSA9PiB7XG4gICAgICBwYW5lLnNldFBlbmRpbmdJdGVtKG51bGwpO1xuXG4gICAgICBpZiAoYXRvbS5jb25maWcuZ2V0KCdzaW5nbGUtY2xpY2stb3Blbi5mb2N1c0VkaXRvck9uT3BlbicpKSB7XG4gICAgICAgIHByb2Nlc3MubmV4dFRpY2soKCkgPT4gYXRvbS52aWV3cy5nZXRWaWV3KGl0ZW0pLmZvY3VzKCkpO1xuICAgICAgfVxuICAgIH0pXG4gICk7XG5cbiAgaWYgKGF0b20uY29uZmlnLmdldCgnc2luZ2xlLWNsaWNrLW9wZW4uZm9jdXNFZGl0b3JPbk9wZW4nKSkge1xuICAgIGRpc3Bvc2FibGVzLmFkZChcbiAgICAgIGF0b20ud29ya3NwYWNlLm9uRGlkQ2hhbmdlQWN0aXZlUGFuZUl0ZW0oaXRlbSA9PiB7XG4gICAgICAgIHZhciB2aWV3ID0gYXRvbS52aWV3cy5nZXRWaWV3KGl0ZW0pO1xuXG4gICAgICAgIGlmICh2aWV3ICYmIHR5cGVvZiB2aWV3LmZvY3VzID09ICdmdW5jdGlvbicpXG4gICAgICAgICAgYXRvbS52aWV3cy5nZXRWaWV3KGl0ZW0pLmZvY3VzKCk7XG4gICAgICB9KVxuICAgICk7XG4gIH1cbn1cblxuLy8gTm8gbW9yZSBkb3VibGUgY2xpY2sgdG8gb3BlbiBmaWxlcyFcbmZ1bmN0aW9uIGRpc2FibGVTZWFyY2hSZXN1bHREb3VibGVDbGljaygpIHtcbiAgZG9jdW1lbnQuYm9keS5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCBvblNlYXJjaFJlc3VsdENsaWNrLCB0cnVlKTtcbiAgcmV0dXJuIG5ldyBEaXNwb3NhYmxlKCgpID0+IHtcbiAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIG9uU2VhcmNoUmVzdWx0Q2xpY2spXG4gIH0pO1xufVxuXG4vLyBUcmlnZ2VyIGEgMm5kIG1vdXNlZG93biBvbiB0aGUgc2VhcmNoIHJlc3VsdFxuLy8gb24gYSBzaW5nbGUgbW91c2Vkb3duLlxuZnVuY3Rpb24gb25TZWFyY2hSZXN1bHRDbGljayhldmVudCkge1xuICB2YXIgZWw7XG4gIC8vIElnbm9yZSBkb3VibGUtY2xpY2tzIG9yIG90aGVyIG1vdXNlIGJ1dHRvbnMuXG4gIC8vIERvIG5vdGhpbmcgaWYgaXQgaXNuJ3QgYSBmaWxlIHRoYXQgd2FzIGNsaWNrZWQuXG4gIGlmIChldmVudC5kZXRhaWwgPT0gMiB8fCBldmVudC5idXR0b24gIT0gMCB8fFxuICAgICEoZWwgPSBldmVudC50YXJnZXQuY2xvc2VzdCgnLnBhbmUtaXRlbSA+IC5yZXN1bHRzLXZpZXcgLnNlYXJjaC1yZXN1bHQnKSkpIHJldHVybjtcbiAgLy8gV2l0aG91dCBuZXh0VGljaygpIHR3byBjb3BpZXMgd291bGQgb3BlbixcbiAgLy8gb25lIGluIHBlbmRpbmcgbW9kZSBhbmQgb25lIGluIG5vcm1hbCBtb2RlLlxuICBwcm9jZXNzLm5leHRUaWNrKCgpID0+IHtcbiAgICAvLyBEaXNwYXRjaCBhIGRvdWJsZS1jbGljayBldmVudCBvbiB0aGUgZmlsZVxuICAgIC8vIHRoYXQgd2FzIGNsaWNrZWQuXG4gICAgZWwuZGlzcGF0Y2hFdmVudChuZXcgQ3VzdG9tRXZlbnQoJ21vdXNlZG93bicsIHtcbiAgICAgIGJ1YmJsZXM6IHRydWUsXG4gICAgICBkZXRhaWw6IDIsXG4gICAgfSkpO1xuICB9KTtcbiAgLy8gQ2FuY2VsIHRoaXMgZXZlbnQuXG4gIGV2ZW50LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xufVxuIl19
//# sourceURL=/Users/ah/.atom/packages/single-click-open/lib/single-click-open.js
