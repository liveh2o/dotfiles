{"mode":"editor","version":1,"windowDimensions":{"x":853,"y":23,"width":853,"height":1417,"maximized":false},"grammars":{"grammarOverridesByPath":{}},"project":{"deserializer":"Project","paths":["/Users/ah/Code/abacus"],"buffers":[]},"workspace":{"deserializer":"Workspace","paneContainer":{"deserializer":"PaneContainer","version":1,"root":{"deserializer":"Pane","id":179,"items":[],"focused":false,"flexScale":1},"activePaneId":179},"packagesWithActiveGrammars":[],"destroyedItemURIs":["/Users/ah/Code/abacus/app/models/monthly_account_balance.rb","/Users/ah/Code/abacus/app/models/monthly_account_transaction_total.rb","/Users/ah/Code/abacus/bin/rake","/Users/ah/Code/abacus/Rakefile","/Users/ah/Code/abacus/lib/tasks/maintenance/transactions.rake","/Users/ah/Code/abacus/lib/tasks/maintenance/accounts.rake","/Users/ah/Code/abacus/lib/tasks/data_migrations/deduplicate_budgets.rake","/Users/ah/Code/abacus/lib/tasks/data_migrations/deduplicate_accounts.rake","/Users/ah/Code/abacus/lib/tasks/data_migrations/deduplicate_transactions.rake","/Users/ah/.Trash/add_guids_to_taggings.rake","/Users/ah/Code/abacus/lib/tasks/account_type_density.rake","/Users/ah/.Trash/20131220194952_add_supertype_to_accounts.rb","/Users/ah/.Trash/20140709224741_remove_trainers_tabl.rb","/Users/ah/Code/abacus/Gemfile.lock","/Users/ah/Code/abacus/config/rubocop/disabled.yml","/Users/ah/Code/abacus/.rubocop.yml","/Users/ah/Code/abacus/spec/subscribers/client_snapshot_subscriber_spec.rb","/Users/ah/Code/abacus/spec/lib/aggregation/matchers/accounts/by_transaction_amount_sample_spec.rb","/Users/ah/Code/abacus/config/initializers/validators.rb","/Users/ah/Code/abacus/config/environments/development.rb","/Users/ah/Code/abacus/config/environments/production.rb","/Users/ah/Code/abacus/lib/aggregation/processors/holding_processor.rb","/Users/ah/Code/abacus/lib/aggregation/processors/feed_processor.rb","/Users/ah/Code/abacus/Gemfile","/Users/ah/Code/abacus/app/models/cashflow_sequence.rb","/Users/ah/Code/abacus/app/models/monthly_cash_flow_profile.rb","/Users/ah/Code/abacus/config/application.rb","/Users/ah/Code/abacus/spec/lib/aggregation/processors/account_processor_spec.rb","/Users/ah/Code/abacus/app/subscribers/budget_subscriber.rb","/Users/ah/Code/abacus/app/subscribers/transaction_subscriber.rb","/Users/ah/Code/abacus/app/subscribers/user_subscriber.rb","/Users/ah/Code/abacus/app/workers/destroy_accounts_for_user_worker.rb","/Users/ah/Code/abacus/app/subscribers/account_subscriber.rb","/Users/ah/Code/abacus/app/workers/account_publisher_worker.rb","/Users/ah/Code/abacus/app/workers/publish_holding_created_worker.rb","/Users/ah/Code/abacus/app/workers/detect_primary_account_numbers_worker.rb","/Users/ah/Code/abacus/app/workers/destroy_holdings_for_account_worker.rb","/Users/ah/Code/abacus/config/sidekiq.yml.sample","/Users/ah/Code/abacus/config/sidekiq.yml","/Users/ah/Code/abacus/app/workers/error_worker.rb","/Users/ah/Code/abacus/config/environments/test.rb","/Users/ah/Code/abacus/app/models/daily_account_transaction_total.rb","/Users/ah/Code/abacus/app/models/daily_account_balance.rb","/Users/ah/Code/abacus/app/services/atlas/abacus/daily_account_balance_service.rb","/Users/ah/Code/abacus/lib/aggregation/matchers/accounts/environment.rb","/Users/ah/Code/abacus/lib/aggregation/matchers/accounts/by_transaction_amount_sample.rb","/Users/ah/Code/abacus/lib/aggregation/matchers/accounts/termination.rb","/Users/ah/Code/abacus/lib/aggregation/matchers/account_matcher.rb","/Users/ah/Code/abacus/lib/aggregation/processors/transaction_processor.rb","/Users/ah/Code/abacus/spec/spec_helper.rb","/Users/ah/Code/abacus/app/models/goal.rb","/Users/ah/Code/abacus/app/subscribers/goal_subscriber.rb","/Users/ah/Code/abacus/spec/factories/goal_factory.rb","/Users/ah/Code/abacus/spec/lib/abacus/account_merger_spec.rb","/Users/ah/Code/abacus/lib/abacus/account_merger.rb","/Users/ah/Code/abacus/db/schema.rb","atom://find-and-replace/project-results","/Users/ah/Code/abacus/spec/models/account_spec.rb","/Users/ah/Code/abacus/app/models/account.rb","/Users/ah/Code/abacus/db/migrate/20160118184236_add_more_fields_to_accounts.rb","/Users/ah/Code/abacus/lib/aggregation/processors/account_processor.rb","/Users/ah/Code/abacus/app/models/concerns/feed_synchronizable.rb"]},"packageStates":{"fuzzy-finder":{},"keybinding-resolver":{},"metrics":{"sessionLength":2646509},"tree-view":{"directoryExpansionStates":{"/Users/ah/Code/abacus":{"isExpanded":true,"entries":{".git":{"isExpanded":false,"entries":{}},"app":{"isExpanded":true,"entries":{"models":{"isExpanded":true,"entries":{"concerns":{"isExpanded":true,"entries":{}}}},"observers":{"isExpanded":false,"entries":{}},"services":{"isExpanded":true,"entries":{"atlas":{"isExpanded":true,"entries":{"abacus":{"isExpanded":true,"entries":{}}}},"concerns":{"isExpanded":false,"entries":{}}}},"subscribers":{"isExpanded":false,"entries":{}},"workers":{"isExpanded":false,"entries":{}}}},"bin":{"isExpanded":false,"entries":{}},"config":{"isExpanded":false,"entries":{}},"coverage":{"isExpanded":false,"entries":{}},"db":{"isExpanded":false,"entries":{}},"lib":{"isExpanded":false,"entries":{}},"log":{"isExpanded":false,"entries":{}},"spec":{"isExpanded":false,"entries":{}},"tmp":{"isExpanded":false,"entries":{}},"vendor":{"isExpanded":false,"entries":{}}}}},"hasFocus":true,"attached":true,"scrollLeft":0,"scrollTop":0,"width":209},"find-and-replace":{"findOptions":{"findPattern":"unheld","replacePattern":"","pathsPattern":"","useRegex":true,"wholeWord":false,"caseSensitive":false,"inCurrentSelection":false},"findHistory":["receive(:\\w* =","receive(.*=","any_instance","stub_chain","([:\\w\\d]*)\\.stub_chain","([\\.:\\w\\d]*)\\.stub_chain","stub_chain","should","should_receive","should",".should","real_balance","normalized_balance","account_type_or_balance_changed","is_asset?","real_balance","deduce_account_subtype","valid_for_account","trailing","valid_fo","protected","ice","with_monthly_cash_flow_profile_goal","merge_accounts_to_most_recently_created","unheld"],"replaceHistory":["expect($1).to receive","receive(:new).and_return(account_merger)","receive(:by_guid).and_return(","allow($1).to_","allow($1).to receive_message_chain"],"pathsHistory":["expect($1).to receive","receive(:new).and_return(account_merger)","receive(:by_guid).and_return(","allow($1).to_","allow($1).to receive_message_chain"]},"tabs":[{}],"linter":{"scope":"File"}},"fullScreen":false}