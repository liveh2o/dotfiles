{"mode":"editor","version":1,"windowDimensions":{"x":0,"y":0,"width":1280,"height":800,"maximized":true},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"paths":["/Users/ah/Code/active_remote-cached"],"buffers":[{"text":"require 'delegate'\n\nmodule ActiveRemote::Cached\n  class Cache < ::SimpleDelegator\n    attr_reader :cache_provider\n\n    def initialize(new_cache_provider)\n      @cache_provider = new_cache_provider\n      @nested_cache_provider = ::ActiveSupport::Cache::NullStore.new\n\n      validate_provider_method_present(:delete)\n      validate_provider_method_present(:exist?)\n      validate_provider_method_present(:fetch)\n      validate_provider_method_present(:read)\n      validate_provider_method_present(:write)\n\n      super(@cache_provider)\n    end\n\n    def delete(*args)\n      nested_cache_provider.delete(*args)\n      super\n    end\n\n    def enable_nested_caching!\n      @nested_cache_provider = ::ActiveSupport::Cache::MemoryStore.new\n    end\n\n    def exist?(*args)\n      nested_cache_provider.exist?(*args) || super\n    end\n\n    def fetch(name, options = {})\n      fetch_value = nested_cache_provider.fetch(name, options) { super }\n\n      unless valid_fetched_value?(fetch_value, options)\n        delete(name)\n      end\n\n      return fetch_value\n    end\n\n    def read(*args)\n      nested_cache_provider.read(*args) || super\n    end\n\n    def write(*args)\n      nested_cache_provider.write(*args)\n      super\n    end\n\n  private\n\n    def nested_cache_provider\n      @nested_cache_provider\n    end\n\n    def valid_fetched_value?(value, options = {})\n      return false if value.nil?\n      return false if !options.fetch(:allow_empty, false) && value.respond_to?(:empty?) && value.empty?\n      return true\n    end\n\n    def validate_provider_method_present(method_name)\n      unless self.cache_provider.respond_to?(method_name)\n        raise <<-CACHE_METHOD\n          ActiveRemote::Cached::Cache must respond_to? #{method_name}\n          in order to be used as a caching interface for ActiveRemote\n        CACHE_METHOD\n      end\n    end\n  end\nend\n","markerStore":{"nextMarkerId":52,"markersById":{"0":{"range":{"start":{"row":29,"column":50},"end":{"row":29,"column":50}},"properties":{"type":"selection","editorId":14,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"51":{"range":{"start":{"row":29,"column":50},"end":{"row":29,"column":50}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false}},"version":2},"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/ah/Code/active_remote-cached/lib/active_remote/cached/cache.rb","digestWhenLastPersisted":"19fd9761aa6d265ee3b877319e8ac8785b6d171d","preferredLineEnding":null,"deserializer":"TextBuffer","version":2}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":3,"items":[{"id":14,"softTabs":true,"displayBuffer":{"id":15,"softWrapped":true,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/ah/Code/active_remote-cached/lib/active_remote/cached/cache.rb","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"}],"activeItemURI":"/Users/ah/Code/active_remote-cached/lib/active_remote/cached/cache.rb","focused":true,"flexScale":1,"deserializer":"Pane"},"activePaneId":3,"deserializer":"PaneContainer","version":1},"fullScreen":true,"packagesWithActiveGrammars":["language-ruby","language-hyperlink","language-todo"],"deserializer":"Workspace"},"grammars":{"deserializer":"GrammarRegistry","grammarOverridesByPath":{}},"packageStates":{"fuzzy-finder":{"/Users/ah/Code/active_remote-cached/lib/active_remote/cached/cache.rb":1443408257489},"keybinding-resolver":{},"metrics":{"sessionLength":733804},"tree-view":{"directoryExpansionStates":{"/Users/ah/Code/active_remote-cached":{"isExpanded":true,"entries":{"lib":{"isExpanded":true,"entries":{"active_remote":{"isExpanded":true,"entries":{"cached":{"isExpanded":true,"entries":{}}}}}},"spec":{"isExpanded":true,"entries":{"active_remote":{"isExpanded":true,"entries":{"cached":{"isExpanded":false,"entries":{}}}}}}}}},"selectedPath":"/Users/ah/Code/active_remote-cached/lib/active_remote/cached/cache.rb","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200},"find-and-replace":{"findOptions":{"findPattern":"fetch","replacePattern":"","pathsPattern":"","useRegex":false,"wholeWord":false,"caseSensitive":false,"inCurrentSelection":false},"findHistory":["_cached_find_method_name","fetch"],"replaceHistory":[],"pathsHistory":[]},"linter":{"scope":"File"},"tabs":[{}]}}