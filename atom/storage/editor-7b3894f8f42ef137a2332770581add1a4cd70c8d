{"mode":"editor","version":1,"windowDimensions":{"x":830,"y":23,"width":1730,"height":1413,"maximized":false},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"deserializer":"Project","paths":["/Users/ah/Code/alfred"],"buffers":[]},"workspace":{"deserializer":"Workspace","paneContainer":{"deserializer":"PaneContainer","version":1,"root":{"deserializer":"Pane","id":1613,"items":[],"focused":false,"flexScale":1},"activePaneId":1613},"packagesWithActiveGrammars":[],"destroyedItemURIs":["/Users/ah/Code/alfred/app/models/nexus/v1/transaction.rb","/Users/ah/Code/alfred/app/models/v1/transaction.rb","/Users/ah/Code/alfred/.travis.yml","/Users/ah/Code/alfred/app/middleware/session_token_throttle.rb","/Users/ah/Code/alfred/config/initializers/wrap_parameters.rb","/Users/ah/.Trash/cookies_serializer.rb","/Users/ah/Code/alfred/config/initializers/request_throttling.rb","/Users/ah/Code/alfred/config/initializers/rufus.rb","/Users/ah/Code/alfred/app/models/v1/session.rb","/Users/ah/Code/alfred/config/initializers/session_store.rb","/Users/ah/Code/alfred/Gemfile"]},"grammars":{"grammarOverridesByPath":{}},"packageStates":{"fuzzy-finder":{},"keybinding-resolver":{},"metrics":{"sessionLength":487702},"tree-view":{"directoryExpansionStates":{"/Users/ah/Code/alfred":{"isExpanded":true,"entries":{".git":{"isExpanded":false,"entries":{}},"app":{"isExpanded":false,"entries":{}},"bin":{"isExpanded":false,"entries":{}},"config":{"isExpanded":false,"entries":{}},"coverage":{"isExpanded":false,"entries":{}},"lib":{"isExpanded":false,"entries":{}},"log":{"isExpanded":false,"entries":{}},"public":{"isExpanded":false,"entries":{}},"spec":{"isExpanded":false,"entries":{}},"tmp":{"isExpanded":false,"entries":{}},"vendor":{"isExpanded":false,"entries":{}}}}},"hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":250},"find-and-replace":{"findOptions":{"findPattern":"filter_request_body","replacePattern":"","pathsPattern":"","useRegex":false,"wholeWord":false,"caseSensitive":false,"inCurrentSelection":false},"findHistory":["([\\.:\\w\\(\\)=>]*)\\.should","([\\.:\\w\\(\\)]*)\\.should","\\.should","should","{ should","to_receive","stub","\\.stub","([\\.:\\w\\(\\)]*)\\.stub","\\.stub","([\\.:\\w\\(\\)]*)\\.stub","stub","stub\\(","stub","\\.any_instance","([\\.:\\w\\(\\)]*)\\.any_instance","\\.any_instance","([\\.:\\w\\(\\)]*)\\.any_instance","([\\.:\\w\\]*)\\.any_instance","([\\.:\\w]*)\\.any_instance","allow\\(([\\.:\\w]*)\\.any_instance","aggregated_member","Job.create","aggregate","filter_request_body"],"replaceHistory":["expect($1).to_receive","expect($1).to receive","expect($1).not_to receive","expect($1).not_to","expect(@","expect($1)","expect($1).to","$1expect($2).to","expect($1).to","allow($1).to receive"],"pathsHistory":["expect($1).to_receive","expect($1).to receive","expect($1).not_to receive","expect($1).not_to","expect(@","expect($1)","expect($1).to","$1expect($2).to","expect($1).to","allow($1).to receive"]},"linter":{"scope":"File"},"tabs":[{}]},"fullScreen":false}