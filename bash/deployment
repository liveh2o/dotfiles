#!bash
export DEPLOYMENT_PATH=$HOME/Deployment
export GITLAB="gitlab.mx.com"

# MX aliases
alias derp='PB_IGNORE_DEPRECATIONS=1 RUBYOPT="-W0"'
alias nats='PB_CLIENT_TYPE="protobuf/nats/client" PB_SERVER_TYPE="protobuf/nats/server"'
alias t='turbo'
alias tb='t b'
alias tbu='t bu'
alias tbx='t bx'
alias turbo='jrbdev derp'

# Trebuchet aliases
alias prod="t treb prod"
alias int="t treb int"
alias qa="t treb qa"
alias sand="t treb sand"
alias corp="t treb corp"

function dev {
  local directory=${2:-$1}

  git clone git@$GITLAB:mx/$1 $directory
}

function ops {
  local directory=${2:-$1}

  git clone git@$GITLAB:ops/$1 $directory
}

# Changing directory to code project
function d { cd $DEPLOYMENT_PATH/$1; }

# Backport changes downstream
function backport {
  __git_sync_remote_branches

  local startbranch=$(__git_current_branch)

  echo 'Backporting stable > qa';
  git checkout qa
  git merge stable
  git push origin qa

  echo 'Backporting qa > master';
  git checkout master
  git merge qa
  git push origin master

  __git_checkout_unless_current $startbranch

  echo "All branches have been backported."
}

# Downstream out-of-date branch check
function downstream {
  echo 'Downstream out-of-date branch check'

  echo '[stable > qa]'
  cherry qa stable

  echo '[qa > master]'
  cherry master qa
}

# Promote a release to the next environment
function promote {
  # rvm use ruby@promote
  drb

  local env=$1
  shift

  case "$env" in
    prod)
      git checkout stable
      git merge qa --ff-only
      git push origin stable
      treb prod deploy --site se,sd $*
      ;;
    int)
      git checkout stable
      git merge qa --ff-only
      git push origin stable
      treb int deploy $*
      ;;
    qa)
      git checkout qa
      git merge master --ff-only
      git push origin qa
      treb qa deploy --site sb,sa $*
      ;;
    sand)
      git checkout master
      treb sand deploy $*
      ;;
  esac
}

# Upstream branch check
function upstream {
  echo 'Upstream branch check'

  echo '[qa > stable]'
  cherry stable qa

  echo '[master > qa]'
  cherry qa master
}
